DATABASE_URL=postgres://clippr_user:shradhesh71@localhost:5432/Clippr_db
SQLX_OFFLINE=true

# MPC Database URLs for 3-server threshold setup
# For testing, using the same Neon database for all three instances
MPC1_DATABASE_URL=postgresql://neondb_owner:npg_RA2KtZrwCa5Y@ep-young-bonus-a102wqzy-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
MPC2_DATABASE_URL=postgresql://neondb_owner:npg_RA2KtZrwCa5Y@ep-young-bonus-a102wqzy-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
MPC3_DATABASE_URL=postgresql://neondb_owner:npg_RA2KtZrwCa5Y@ep-young-bonus-a102wqzy-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require

# TODO: Set up separate databases for each MPC instance in production:
# MPC1: Neon + AWS
# MPC2: Neon + Azure  
# MPC3: AWS Aurora/RDS - postgresql://neondb_owner:password@mpc3-database.cxko8ws2e99s.ap-south-1.rds.amazonaws.com:5432/mpc3_database

# Previous database setup commands for reference:
# sudo -u postgres psql -c "CREATE USER Clippr_user WITH PASSWORD 'shradhesh71';"
# sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \"Clippr_db\" TO clippr_user;"
# sudo -u postgres psql -d Clippr_db -c "
# CREATE TABLE IF NOT EXISTS users (
#     id TEXT PRIMARY KEY,
#     email TEXT UNIQUE NOT NULL,
#     password_hash TEXT NOT NULL,
#     createaws link: mpc3-database.cxko8ws2e99s.ap-south-1.rds.amazonaws.com
#  and her port = 5432d_at TIMESTAMPTZ NOT NULL
# );"
# curl -X POST http://127.0.0.1:8080/signup -H "Content-Type: application/json" -d '{"email": "test@example.com", "password": "password123"}'


